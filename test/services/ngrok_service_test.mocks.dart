// Mocks generated by Mockito 5.4.6 from annotations
// in cloudtolocalllm/test/services/ngrok_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:ui' as _i6;

import 'package:cloudtolocalllm/services/auth_service.dart' as _i3;
import 'package:flutter/foundation.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeValueNotifier_0<T> extends _i1.SmartFake
    implements _i2.ValueNotifier<T> {
  _FakeValueNotifier_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [AuthService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthService extends _i1.Mock implements _i3.AuthService {
  MockAuthService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ValueNotifier<bool> get isAuthenticated =>
      (super.noSuchMethod(
            Invocation.getter(#isAuthenticated),
            returnValue: _FakeValueNotifier_0<bool>(
              this,
              Invocation.getter(#isAuthenticated),
            ),
          )
          as _i2.ValueNotifier<bool>);

  @override
  _i2.ValueNotifier<bool> get isLoading =>
      (super.noSuchMethod(
            Invocation.getter(#isLoading),
            returnValue: _FakeValueNotifier_0<bool>(
              this,
              Invocation.getter(#isLoading),
            ),
          )
          as _i2.ValueNotifier<bool>);

  @override
  bool get isWeb =>
      (super.noSuchMethod(Invocation.getter(#isWeb), returnValue: false)
          as bool);

  @override
  bool get isMobile =>
      (super.noSuchMethod(Invocation.getter(#isMobile), returnValue: false)
          as bool);

  @override
  bool get isDesktop =>
      (super.noSuchMethod(Invocation.getter(#isDesktop), returnValue: false)
          as bool);

  @override
  bool get isValidatingToken =>
      (super.noSuchMethod(
            Invocation.getter(#isValidatingToken),
            returnValue: false,
          )
          as bool);

  @override
  bool get supportsBiometrics =>
      (super.noSuchMethod(
            Invocation.getter(#supportsBiometrics),
            returnValue: false,
          )
          as bool);

  @override
  bool get supportsDeepLinking =>
      (super.noSuchMethod(
            Invocation.getter(#supportsDeepLinking),
            returnValue: false,
          )
          as bool);

  @override
  bool get supportsSecureStorage =>
      (super.noSuchMethod(
            Invocation.getter(#supportsSecureStorage),
            returnValue: false,
          )
          as bool);

  @override
  String get recommendedAuthMethod =>
      (super.noSuchMethod(
            Invocation.getter(#recommendedAuthMethod),
            returnValue: _i4.dummyValue<String>(
              this,
              Invocation.getter(#recommendedAuthMethod),
            ),
          )
          as String);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i5.Future<void> login() =>
      (super.noSuchMethod(
            Invocation.method(#login, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> logout() =>
      (super.noSuchMethod(
            Invocation.method(#logout, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<bool> handleCallback() =>
      (super.noSuchMethod(
            Invocation.method(#handleCallback, []),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  _i5.Future<void> loginWithBiometrics() =>
      (super.noSuchMethod(
            Invocation.method(#loginWithBiometrics, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<bool> isBiometricAvailable() =>
      (super.noSuchMethod(
            Invocation.method(#isBiometricAvailable, []),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  _i5.Future<void> refreshTokenIfNeeded() =>
      (super.noSuchMethod(
            Invocation.method(#refreshTokenIfNeeded, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  Map<String, dynamic> getPlatformInfo() =>
      (super.noSuchMethod(
            Invocation.method(#getPlatformInfo, []),
            returnValue: <String, dynamic>{},
          )
          as Map<String, dynamic>);

  @override
  _i5.Future<String?> getValidatedAccessToken({bool? forceRefresh = false}) =>
      (super.noSuchMethod(
            Invocation.method(#getValidatedAccessToken, [], {
              #forceRefresh: forceRefresh,
            }),
            returnValue: _i5.Future<String?>.value(),
          )
          as _i5.Future<String?>);

  @override
  _i5.Future<void> loginWithPersistence() =>
      (super.noSuchMethod(
            Invocation.method(#loginWithPersistence, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> logoutWithCleanup() =>
      (super.noSuchMethod(
            Invocation.method(#logoutWithCleanup, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<bool> validateAuthentication() =>
      (super.noSuchMethod(
            Invocation.method(#validateAuthentication, []),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void addListener(_i6.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i6.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}

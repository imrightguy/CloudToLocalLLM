x-flutter-env: &flutter-env
  FLUTTER_ROOT: /flutter
  PUB_CACHE: /flutter/.pub-cache
  FLUTTER_SUPPRESS_ANALYTICS: true
  NO_COLOR: true
  FLUTTER_NO_ROOT_WARNING: true

services:
  # Web application service
  webapp:
    build:
      context: .
      dockerfile: config/docker/Dockerfile.web
    image: cloudtolocalllm-webapp
    container_name: cloudtolocalllm-webapp
    volumes:
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
      - ./ssl:/etc/nginx/ssl
    environment:
      <<: *flutter-env
    restart: unless-stopped
    networks:
      - cloudllm-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:80/health_internal || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

  # Tunnel service

  # FusionAuth service
  fusionauth:
    image: fusionauth/fusionauth-app:latest
    container_name: cloudtolocalllm-fusionauth-app
    ports:
      - "9011:9011"
    environment:
      - DATABASE_URL=jdbc:postgresql://db:5432/fusionauth
      - DATABASE_ROOT_USERNAME=postgres
      - DATABASE_ROOT_PASSWORD=postgres
      - DATABASE_USERNAME=fusionauth
      - DATABASE_PASSWORD=fusionauth
      - FUSIONAUTH_APP_MEMORY=512M
      - FUSIONAUTH_APP_RUNTIME_MODE=development
      - SEARCH_TYPE=database
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - cloudllm-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9011/api/status || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Database service
  db:
    image: postgres:13-alpine
    container_name: cloudtolocalllm-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=fusionauth
    volumes:
      - db_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - cloudllm-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d fusionauth"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Admin control daemon

  # Nginx service for routing
  nginx:
    image: nginx:alpine
    container_name: cloudtolocalllm-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certbot/www:/var/www/certbot:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - ./ssl:/etc/nginx/ssl
    command: sh -c "mkdir -p /var/run/nginx && chown nginx:nginx /var/run/nginx && /docker-entrypoint.sh nginx -g 'daemon off;'"
    depends_on:
      webapp:
        condition: service_started
      fusionauth:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - cloudllm-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

  # Certbot for SSL certificates
  certbot:
    image: certbot/certbot
    container_name: cloudtolocalllm-certbot
    volumes:
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew --webroot -w /var/www/certbot --staging --quiet && sleep 12h & wait $${!}; done;'"
    networks:
      - cloudllm-network

networks:
  cloudllm-network:
    driver: bridge

volumes:
  db_data:
    driver: local
  # fusionauth_config:
  #   driver: local 
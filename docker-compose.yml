version: '3.8'

services:
  # Web application service
  webapp:
    build:
      context: .
      dockerfile: Dockerfile.web
    image: cloudtolocalllm-webapp
    container_name: cloudtolocalllm-webapp
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
      - ./ssl:/etc/nginx/ssl
    restart: unless-stopped
    networks:
      - cloudllm-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:80/health_internal || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

  # Postfix Mail Server for direct email sending
  # WARNING: Ensuring email deliverability with a self-hosted MTA is complex.
  # Requires proper rDNS (PTR), SPF, DKIM, DMARC, and an IP with good reputation.
  # Port 25 outbound must not be blocked by your VPS provider.
  postfix-mail:
    image: boky/postfix:latest
    container_name: cloudtolocalllm-postfix-mail
    restart: always
    environment:
      - "HOSTNAME=mail.cloudtolocalllm.online"
      - "DOMAIN=cloudtolocalllm.online"
      - "ALLOWED_SENDER_DOMAINS=cloudtolocalllm.online"
      - "NETWORK_INTERFACE=eth0"
      - "RELAYHOST="
      - "MYNETWORKS=127.0.0.0/8 172.16.0.0/12 192.168.0.0/16"
      - "DKIM_DOMAINS=cloudtolocalllm.online"
      - "DKIM_SELECTOR=mail"
      - "DKIM_KEY_PATH=/etc/opendkim/keys/cloudtolocalllm.online/mail.private"
      - "DKIM_AUTOGENERATE=true"
    volumes:
      - ./config/dkim:/etc/opendkim/keys/cloudtolocalllm.online:ro 
    ports:
      - "2500:25"
    cap_add:
      - NET_ADMIN
    networks:
      - cloudllm-network

  # Certbot for SSL certificates
  certbot:
    image: certbot/certbot
    container_name: cloudtolocalllm-certbot
    volumes:
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
      - ./scripts/certbot_permissions_hook.sh:/opt/certbot_permissions_hook.sh:ro
      - /var/run/docker.sock:/var/run/docker.sock
    entrypoint: |
      /bin/sh -c '
        trap exit TERM;
        echo "Attempting initial staging wildcard certificate acquisition...";
        certbot certonly --manual --preferred-challenges dns --manual-public-ip-logging-ok --email christopher.maltais@gmail.com --agree-tos --no-eff-email --staging -d "*.cloudtolocalllm.online" -d cloudtolocalllm.online --deploy-hook "/opt/certbot_permissions_hook.sh" || echo "Initial certonly command failed or no certs due for renewal.";
        echo "Initial cert attempt/check done. Starting renewal loop.";
        while :; do
          certbot renew --quiet --staging --preferred-challenges dns --deploy-hook "/opt/certbot_permissions_hook.sh";
          sleep 12h & wait $${!};
        done;
      '
    networks:
      - cloudllm-network

  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=production
      - AUTH0_DOMAIN=dev-xafu7oedkd5wlrbo.us.auth0.com
      - AUTH0_CLIENT_ID=HlOeY1pG9e2g6MvFKPDFbJ3ASIhxDgNu
      - AUTH0_CLIENT_SECRET=${AUTH0_CLIENT_SECRET}
      - AUTH0_AUDIENCE=https://dev-xafu7oedkd5wlrbo.us.auth0.com/api/v2/
      - DATABASE_URL=postgresql://postgres:${DB_PASSWORD}@db:5432/cloudtolocalllm
    depends_on:
      - db
    restart: unless-stopped

  db:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=cloudtolocalllm
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

networks:
  cloudllm-network:
    driver: bridge

volumes:
  db_data:
    driver: local
  postgres_data:

# CloudToLocalLLM v3.5.0+ Development Environment
# Docker Compose configuration for streamlined development workflow
#
# Usage:
#   # Start development environment
#   docker compose -f docker-compose.dev.yml up -d
#   
#   # Enter development container
#   docker compose -f docker-compose.dev.yml exec flutter bash
#   
#   # Run health check
#   docker compose -f docker-compose.dev.yml exec flutter flutter-health
#   
#   # Build for Linux desktop
#   docker compose -f docker-compose.dev.yml exec flutter flutter-build
#   
#   # Build for web
#   docker compose -f docker-compose.dev.yml exec flutter flutter-web
#   
#   # Stop environment
#   docker compose -f docker-compose.dev.yml down

services:
  flutter:
    build:
      context: .
      dockerfile: Dockerfile.dev
    image: cloudtolocalllm:dev
    container_name: cloudtolocalllm-dev
    
    # Mount source code and preserve build artifacts
    volumes:
      - .:/workspace
      - flutter-pub-cache:/home/flutter/.pub-cache
      - flutter-build-cache:/home/flutter/.flutter
      
    # Environment variables for development
    environment:
      - DISPLAY=${DISPLAY:-:0}
      - FLUTTER_WEB_USE_SKIA=true
      - CHROME_EXECUTABLE=/usr/bin/google-chrome-stable
      
    # X11 forwarding for GUI applications (system tray testing)
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      
    # Network configuration
    ports:
      - "8080:8080"   # Flutter web dev server
      - "3000:3000"   # Alternative web port
      - "4000:4000"   # API development
      - "5000:5000"   # Additional services
      
    # Keep container running
    tty: true
    stdin_open: true
    
    # Working directory
    working_dir: /workspace
    
    # Health check
    healthcheck:
      test: ["/home/flutter/health-check.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Optional: Local Ollama service for testing
  ollama:
    image: ollama/ollama:latest
    container_name: cloudtolocalllm-ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama-data:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0
    profiles:
      - testing
    restart: unless-stopped

  # Optional: Web server for testing built web app
  web-server:
    image: nginx:alpine
    container_name: cloudtolocalllm-web
    ports:
      - "8081:80"
    volumes:
      - ./build/web:/usr/share/nginx/html:ro
    profiles:
      - testing
    depends_on:
      - flutter

# Named volumes for persistent data
volumes:
  flutter-pub-cache:
    driver: local
  flutter-build-cache:
    driver: local
  ollama-data:
    driver: local

# Networks
networks:
  default:
    name: cloudtolocalllm-dev

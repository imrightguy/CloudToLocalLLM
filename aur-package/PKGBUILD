# Maintainer: Christopher Maltais <christopher.maltais@gmail.com>
#
# Pre-built binary package - NO Flutter dependency required!
# This package downloads a pre-built CloudToLocalLLM binary, so users
# don't need to install Flutter or any build dependencies.
#
pkgname=cloudtolocalllm
pkgver=3.0.2
pkgrel=1
pkgdesc="Local LLM interface with cloud synchronization and essential tunneling functionality (Unified 126MB package)"
arch=('x86_64')
url="https://github.com/imrightguy/CloudToLocalLLM"
license=('MIT')
depends=(
    'libayatana-appindicator'
    'gtk3'
    'glib2'
    'cairo'
    'pango'
    'gdk-pixbuf2'
    'atk'
    'at-spi2-atk'
    'dbus'
    'xdg-utils'
    'hicolor-icon-theme'
    'python'  # For tray daemon
    'wmctrl'  # For window management
)
makedepends=()
optdepends=(
    'ollama: Local LLM server for direct desktop connectivity'
    'firefox: Web browser for authentication flow'
    'chromium: Alternative web browser for authentication'
)
provides=('cloudtolocalllm')
conflicts=('cloudtolocalllm-git')
install=cloudtolocalllm.install

# Unified optimized package from SourceForge
source=(
    "https://github.com/imrightguy/CloudToLocalLLM/archive/v$pkgver.tar.gz"
    "https://sourceforge.net/projects/cloudtolocalllm/files/releases/v${pkgver}/cloudtolocalllm-${pkgver}-x86_64.tar.gz"
)
sha256sums=(
    'SKIP'  # Source archive checksum
    'aa245738361bf3b44dbd98d3d47db5b0d0aaa5a932bc0c06cf3acf66a4a0ab98'  # Unified package checksum
)

prepare() {
    cd "$srcdir"

    msg "Extracting unified CloudToLocalLLM package..."

    # Extract the unified package
    local package_file="cloudtolocalllm-${pkgver}-x86_64.tar.gz"

    if [[ ! -f "$package_file" ]]; then
        error "Unified package not found: $package_file"
        return 1
    fi

    # Extract the package
    tar -xzf "$package_file" || {
        error "Failed to extract unified package"
        return 1
    }

    # Verify extraction
    local extracted_dir="cloudtolocalllm-${pkgver}"
    if [[ ! -d "$extracted_dir" ]]; then
        error "Failed to extract package or unexpected directory structure"
        return 1
    fi

    msg "Unified package extraction completed successfully"
}

build() {
    # No build steps required - using pre-built binary
    echo "Using pre-built binary package - no compilation needed"
}

package() {
    cd "$srcdir"

    # Install the unified CloudToLocalLLM application
    install -dm755 "$pkgdir/usr/share/cloudtolocalllm"

    # Copy the unified application files from the extracted package
    local binary_dir="cloudtolocalllm-$pkgver"
    if [[ -d "$binary_dir" ]]; then
        cd "$binary_dir"
        # Copy all files from unified package
        cp -r * "$pkgdir/usr/share/cloudtolocalllm/"

        # Make the Flutter binary executable
        chmod +x "$pkgdir/usr/share/cloudtolocalllm/cloudtolocalllm"

        # Install essential tray daemon (core component)
        install -dm755 "$pkgdir/usr/bin"
        if [[ -f "cloudtolocalllm-enhanced-tray" ]]; then
            install -Dm755 "cloudtolocalllm-enhanced-tray" "$pkgdir/usr/bin/cloudtolocalllm-tray"
        else
            echo "Warning: Essential tray daemon not found in unified package"
        fi

        # Install settings application
        if [[ -f "cloudtolocalllm-settings" ]]; then
            install -Dm755 "cloudtolocalllm-settings" "$pkgdir/usr/bin/cloudtolocalllm-settings"
        fi

        cd "$srcdir"
    else
        echo "Error: Unified package directory not found: $binary_dir"
        echo "Available directories:"
        ls -la
        exit 1
    fi

    # Create unified wrapper script in /usr/bin
    cat > "$pkgdir/usr/bin/cloudtolocalllm" << 'EOF'
#!/bin/bash
# CloudToLocalLLM v3.0.2 unified wrapper script
# Manages essential tray daemon and Flutter application

cd /usr/share/cloudtolocalllm

# Start essential tray daemon (core tunneling functionality)
if [[ -x "/usr/bin/cloudtolocalllm-tray" ]]; then
    # Start tray daemon if not already running
    if ! pgrep -f "cloudtolocalllm-enhanced-tray" > /dev/null; then
        /usr/bin/cloudtolocalllm-tray --daemon &
        sleep 1
    fi
else
    echo "Warning: Essential tray daemon not found. Some functionality may be limited."
fi

# Launch main Flutter application
exec ./cloudtolocalllm "$@"
EOF
    chmod +x "$pkgdir/usr/bin/cloudtolocalllm"

    # Install desktop entry and other files from source
    cd "$srcdir/CloudToLocalLLM-$pkgver"
    install -Dm644 "aur-package/cloudtolocalllm.desktop" \
        "$pkgdir/usr/share/applications/cloudtolocalllm.desktop"

    # Install application icons for desktop integration
    # Use the main app icon for pixmaps (fallback icon)
    install -Dm644 "assets/images/app_icon.png" \
        "$pkgdir/usr/share/pixmaps/cloudtolocalllm.png"

    # Install the main app icon for hicolor theme (most common size)
    install -Dm644 "assets/images/app_icon.png" \
        "$pkgdir/usr/share/icons/hicolor/48x48/apps/cloudtolocalllm.png"

    # Install documentation
    install -Dm644 "README.md" "$pkgdir/usr/share/doc/$pkgname/README.md"
    if [[ -f "CHANGELOG.md" ]]; then
        install -Dm644 "CHANGELOG.md" "$pkgdir/usr/share/doc/$pkgname/CHANGELOG.md"
    fi

    # Install license
    install -Dm644 "LICENSE" "$pkgdir/usr/share/licenses/$pkgname/LICENSE"

    # Install man page if it exists
    if [[ -f "docs/cloudtolocalllm.1" ]]; then
        install -Dm644 "docs/cloudtolocalllm.1" "$pkgdir/usr/share/man/man1/cloudtolocalllm.1"
        gzip -9 "$pkgdir/usr/share/man/man1/cloudtolocalllm.1"
    fi
}

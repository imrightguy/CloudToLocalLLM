FROM nginx:alpine

# Use the official Flutter image for build
FROM ghcr.io/cirruslabs/flutter:3.22.0 AS build

# Create necessary directories with correct permissions
RUN mkdir -p /var/cache/nginx/client_temp \
    /var/cache/nginx/proxy_temp \
    /var/cache/nginx/fastcgi_temp \
    /var/cache/nginx/uwsgi_temp \
    /var/cache/nginx/scgi_temp \
    /var/run \
    /etc/letsencrypt \
    && chown -R nginx:nginx /var/cache/nginx \
    && chown -R nginx:nginx /var/run \
    && chown -R nginx:nginx /etc/letsencrypt \
    && chmod -R 755 /var/cache/nginx \
    && chmod -R 755 /var/run \
    && chmod -R 755 /etc/letsencrypt \
    && touch /var/run/nginx.pid \
    && chown nginx:nginx /var/run/nginx.pid \
    && chmod 644 /var/run/nginx.pid

# Ensure nginx user/group exists (for Alpine)
# Copy nginx configuration
COPY config/nginx/nginx.conf /etc/nginx/nginx.conf

# Copy static files for Flutter Web build
COPY build/web /usr/share/nginx/html

# Expose ports
EXPOSE 80 443

# Switch to non-root user
USER nginx

# Start nginx
CMD ["nginx", "-g", "daemon off;"]

# Build Flutter Web app
RUN flutter config --enable-web && \
    flutter pub get && \
    flutter clean && \
    flutter pub upgrade --major-versions && \
    flutter build web --release 
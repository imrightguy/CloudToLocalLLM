# Flutter Web Application Container - Runtime Only
# Expects pre-built Flutter web app in build/web/ directory
FROM nginx:1.25-alpine

# Install curl for health checks
RUN apk add --no-cache curl

# Ensure nginx user exists with correct permissions (nginx user already exists in nginx:alpine)
RUN id nginx || (addgroup -g 101 -S nginx && \
    adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx)

# Create necessary directories
RUN mkdir -p /var/log/nginx /var/cache/nginx /var/run/nginx /usr/share/nginx/html && \
    chown -R nginx:nginx /var/log/nginx /var/cache/nginx /var/run/nginx /usr/share/nginx/html

# Copy pre-built Flutter web app from host
COPY build/web/ /usr/share/nginx/html/

# Copy nginx configuration
COPY config/nginx/nginx-flutter.conf /etc/nginx/nginx.conf

# Create health check endpoint
RUN echo '<!DOCTYPE html><html><head><title>Health Check</title></head><body><h1>Flutter App Healthy</h1></body></html>' > /usr/share/nginx/html/health.html

# Create health check script
RUN echo '#!/bin/sh' > /usr/local/bin/health-check.sh && \
    echo 'curl --fail http://localhost/health || exit 1' >> /usr/local/bin/health-check.sh && \
    chmod +x /usr/local/bin/health-check.sh

# Set proper permissions
RUN chown -R nginx:nginx /usr/share/nginx/html

# Security: Run as non-root user
USER nginx

# Expose port
EXPOSE 80

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=10s --retries=3 \
    CMD /usr/local/bin/health-check.sh

# Start nginx
CMD ["nginx", "-g", "daemon off;"]

# The docker-compose configuration for the CloudToLocalLLM services

services:
# The tunnel service is commented out because there is no package.json in the build context.
# Add a valid Node.js project with package.json to enable this service.
# tunnel:
#   build:
#     context: .
#     dockerfile: Dockerfile.tunnel
#   networks:
#     - llm-network

  cloud:
    image: node:20
    working_dir: /app
    # depends_on:
    #   tunnel:
    #     condition: service_started
    networks:
      - cloudllm-network
    volumes:
      - ./cloud:/app
      - ./setup_cloud.sh:/app/setup_cloud.sh
    command: /bin/bash /app/setup_cloud.sh
    ports:
      - "3456:3456"
    user: "1000:1000" # Run as non-root user for security and compatibility

  webapp:
    container_name: cloudtolocalllm-webapp
    image: cloudtolocalllm-webapp:latest
    build:
      context: ../..
      dockerfile: config/docker/Dockerfile.web
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ../../certbot/www:/var/www/certbot:ro
      - ../../certbot/data:/etc/letsencrypt:ro
      - ../../.env:/app/.env:ro
      - ../../static_portal_files:/usr/share/nginx/html/portal_files:ro
    networks:
      - cloudllm-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  cloudtolocalllm-fusionauth-db:
    image: postgres:13-alpine
    container_name: cloudtolocalllm-fusionauth-db
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=~~26^Loss^Bell^Came^45~~
      - POSTGRES_DB=fusionauth
    volumes:
      - fusionauth_postgres_data:/var/lib/postgresql/data
    networks:
      - cloudllm-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d fusionauth"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  cloudtolocalllm-fusionauth-app:
    image: fusionauth/fusionauth-app:latest
    restart: unless-stopped
    ports:
      - "9011:9011"
    environment:
      - DATABASE_URL=jdbc:postgresql://cloudtolocalllm-fusionauth-db:5432/fusionauth
      - DATABASE_ROOT_USERNAME=postgres
      - DATABASE_ROOT_PASSWORD=~~26^Loss^Bell^Came^45~~
      - DATABASE_USERNAME=fusionauth
      - DATABASE_PASSWORD=..21_Noise_Than_Other_21..
      - FUSIONAUTH_APP_MEMORY=512M
      - FUSIONAUTH_APP_RUNTIME_MODE=production
      - FUSIONAUTH_APP_URL=https://cloudtolocalllm.online
      - SEARCH_ENGINE_TYPE=database
      - FUSIONAUTH_APP_SETUP_PASSWORD=%%26!Human!Burn!Ring!94%%
    depends_on:
      cloudtolocalllm-fusionauth-db:
        condition: service_healthy
    volumes:
      - fusionauth_config:/usr/local/fusionauth/config
    networks:
      - cloudllm-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9011/api/status || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 30s

volumes:
  fusionauth_postgres_data:
    driver: local
  fusionauth_config:
    driver: local
# Admin reference (not for production):
# POSTGRES_PASSWORD: your_strong_postgres_password
# DATABASE_PASSWORD: your_strong_fusionauth_user_password
# FUSIONAUTH_APP_SETUP_PASSWORD: 1a2b3c4d-5e6f-7a8b-9c0d-1e2f3a4b5c6d

networks:
  cloudllm-network:
    driver: bridge

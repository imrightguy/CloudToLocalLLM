# CloudToLocalLLM Nginx Proxy Configuration - Development Version
# This configuration is for local development without SSL certificates

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Client settings
    client_max_body_size 100M;
    client_body_timeout 60s;
    client_header_timeout 60s;

    # Proxy settings
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
    proxy_buffering on;
    proxy_buffer_size 8k;
    proxy_buffers 8 8k;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=general:10m rate=30r/s;

    # Upstream definitions
    upstream flutter-app {
        server flutter-app:80;
        keepalive 32;
    }

    upstream api-backend {
        server api-backend:8080;
        keepalive 32;
    }

    # HTTP redirect to HTTPS (disabled for development)
    # server {
    #     listen 80;
    #     server_name cloudtolocalllm.online app.cloudtolocalllm.online docs.cloudtolocalllm.online;
    #     return 301 https://$server_name$request_uri;
    # }

    # Main website (cloudtolocalllm.online) - Flutter homepage
    server {
        listen 80;
        server_name cloudtolocalllm.online localhost;

        # Rate limiting
        limit_req zone=general burst=100 nodelay;

        # API endpoints with stricter rate limiting
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://api-backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;

            # WebSocket support for bridge connections
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_read_timeout 86400;
        }

        # WebSocket endpoint for bridge
        location /ws/ {
            proxy_pass http://api-backend/ws/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 86400;
            proxy_send_timeout 86400;
        }

        # Flutter web application (homepage and marketing)
        location / {
            proxy_pass http://flutter-app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;

            # Caching for Flutter assets
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|dart|map)$ {
                proxy_pass http://flutter-app;
                proxy_set_header Host $host;
                expires 1y;
                add_header Cache-Control "public, immutable";
            }

            # No caching for main.dart.js and other dynamic files
            location ~* \.(dart\.js|version\.json)$ {
                proxy_pass http://flutter-app;
                proxy_set_header Host $host;
                expires -1;
                add_header Cache-Control "no-cache, no-store, must-revalidate";
            }
        }
    }

    # Flutter web application (app.cloudtolocalllm.online) - Chat interface
    server {
        listen 80;
        server_name app.cloudtolocalllm.online;

        # Rate limiting
        limit_req zone=general burst=100 nodelay;

        # API endpoints with stricter rate limiting
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://api-backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;

            # WebSocket support for bridge connections
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_read_timeout 86400;
        }

        # WebSocket endpoint for bridge
        location /ws/ {
            proxy_pass http://api-backend/ws/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 86400;
            proxy_send_timeout 86400;
        }

        # Redirect root to chat interface for app subdomain
        location = / {
            return 302 /chat;
        }

        # Flutter web application (chat interface)
        location / {
            proxy_pass http://flutter-app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;

            # Caching for Flutter assets
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|dart|map)$ {
                proxy_pass http://flutter-app;
                proxy_set_header Host $host;
                expires 1y;
                add_header Cache-Control "public, immutable";
            }

            # No caching for main.dart.js and other dynamic files
            location ~* \.(dart\.js|version\.json)$ {
                proxy_pass http://flutter-app;
                proxy_set_header Host $host;
                expires -1;
                add_header Cache-Control "no-cache, no-store, must-revalidate";
            }
        }
    }

    # Documentation site (docs.cloudtolocalllm.online) - Flutter documentation
    server {
        listen 80;
        server_name docs.cloudtolocalllm.online;

        # Rate limiting
        limit_req zone=general burst=100 nodelay;

        # Redirect root to docs route
        location = / {
            return 302 /docs;
        }

        # API endpoints with stricter rate limiting
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://api-backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;

            # WebSocket support for bridge connections
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_read_timeout 86400;
        }

        # WebSocket endpoint for bridge
        location /ws/ {
            proxy_pass http://api-backend/ws/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 86400;
            proxy_send_timeout 86400;
        }

        # Flutter web application (documentation)
        location / {
            proxy_pass http://flutter-app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;

            # Caching for Flutter assets
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|dart|map)$ {
                proxy_pass http://flutter-app;
                proxy_set_header Host $host;
                expires 1y;
                add_header Cache-Control "public, immutable";
            }

            # No caching for main.dart.js and other dynamic files
            location ~* \.(dart\.js|version\.json)$ {
                proxy_pass http://flutter-app;
                proxy_set_header Host $host;
                expires -1;
                add_header Cache-Control "no-cache, no-store, must-revalidate";
            }
        }
    }

    # Health check endpoint
    server {
        listen 80 default_server;
        server_name _;

        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        location / {
            return 444;
        }
    }
}
